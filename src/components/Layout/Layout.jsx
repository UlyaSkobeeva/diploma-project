import PropTypes from 'prop-types'

import { useState, useRef, useEffect } from 'react'
import { NavLink, Outlet } from 'react-router-dom'
import { UseClickOutside } from '../../hooks/UseClickOutside'
import '../../../src/App.css'
import './Header.css'

//–ê–∫—Ç–∏–≤–Ω–∞—è —Å—Å—ã–ª–∫–∞
const setActive = ({ isActive }) =>
  isActive ? 'header-menu__link active-link' : 'header-menu__link'

export default function Layout(props) {
  //–û—Ç–∫—Ä—ã–≤–∞—Ç—å –±—É—Ä–≥–µ—Ä –∏ –∑–∞–∫—Ä—ã–≤–∞—Ç—å =
  const [isOpen, setOpen] = useState()

  //–∑–∞–∫—Ä—ã—Ç—å –±—É—Ä–≥–µ—Ä –ø–æ —Å–≤–∞–π–ø—É
  useEffect(() => {
    let startTouchY = 0 //–Ω–∞—á–∞–ª–æ —Å–≤–∞–π–ø–∞
    let endTouchY = 0 //–æ–∫–æ–Ω—á–∞–Ω–∏–µ —Å–≤–∞–π–ø–∞

    document.addEventListener('touchstart', () => {
      startTouchY = event.changedTouches[0].pageY
    })

    document.addEventListener('touchend', () => {
      endTouchY = event.changedTouches[0].pageY
      if (endTouchY < startTouchY) setOpen(false) //–∑–∞–∫—Ä—ã—Ç—å –∫–æ–≥–¥–∞ –ø—Ä–æ–≤–æ–¥–∏–º —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö
    })
  }, [])

  //–ó–∞–∫—Ä—ã—Ç—å —Ö–µ–¥–µ—Ä –ø–æ –Ω–∞–∂–∞—Ç–∏—é –≤–Ω–µ –æ–±–ª–∞—Å—Ç–∏
  const menuRef = useRef(null)
  UseClickOutside(menuRef, () => {
    if (isOpen) setTimeout(() => setOpen(false), 100)
  })

  const LogOut = () => {
    if (confirm('–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?')) {
      sessionStorage.clear()
      window.location.reload()
    }
  }

  return (
    <>
      {/* ------------------------ HEADER -------------------------------------*/}
      <header className="header">
        <div className="container">
          <div className="header__inner">
            <a href="#" className="header__logo ">
              ùìûùìæùìªùì£ùìÆùì™ùì∂
            </a>
            <nav
              className={`header-menu ${isOpen ? 'open' : ''} `}
              ref={menuRef}
            >
              <ul className="header-menu__list">
                <li className="header-menu__item">
                  <NavLink to="/" className={setActive}>
                    –ì–ª–∞–≤–Ω–∞—è
                  </NavLink>
                </li>
                <li className="header-menu__item">
                  <NavLink to="/worker" className={setActive}>
                    –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏
                  </NavLink>
                </li>
                <li className="header-menu__item">
                  <NavLink to="/document" className={setActive}>
                    –î–æ–∫—É–º–µ–Ω—Ç—ã
                  </NavLink>
                </li>
                <li className="header-menu__item">
                  <NavLink to="/info" className={setActive}>
                    –ò–Ω—Ñ–æ–¶–µ–Ω—Ç—Ä
                  </NavLink>
                </li>
                <li className="header-menu__item">
                  <NavLink to="/idea" className={setActive}>
                    –ë–∞–Ω–∫ –∏–¥–µ–π
                  </NavLink>
                </li>
                <li className="header-menu__item">
                  <NavLink to="/company" className={setActive}>
                    –û –∫–æ–º–ø–∞–Ω–∏–∏
                  </NavLink>
                </li>

                {props.user?.isAdmin && (
                  <li className="header-menu__item">
                    <NavLink to="/admin" className={setActive}>
                      ‚öô
                    </NavLink>
                  </li>
                )}

                <li className="header-menu__item">
                  <NavLink
                    onClick={LogOut}
                    className="header-menu__link"
                    style={{
                      borderTop: '2px solid #fff',
                      borderBottom: '2px solid #fff',
                      borderLeft: '2px solid #fff',
                      padding: '5px',
                      borderRadius: '5px',
                    }}
                  >
                    ‚áí
                  </NavLink>
                </li>
              </ul>
            </nav>

            <div
              className={`burger ${isOpen ? 'active' : ''} `}
              onClick={() => setOpen(!isOpen)}
            >
              <span></span>
            </div>
          </div>
        </div>
      </header>
      {/* ----------------------------- /HEADER ------------------------------------------------------ */}

      <main>
        {/* –°–û–î–ï–†–ñ–ò–ú–û–ï –í–°–ï–• –°–¢–†–ê–ù–ò–¶ –ù–ê–•–û–î–ò–¢–°–Ø –í main */}
        <Outlet />
      </main>
    </>
  )
}

Layout.propTypes = {
  user: PropTypes.object,
}
